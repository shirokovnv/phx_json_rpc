name: Elixir CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
    strategy:
      matrix:
        elixir: ["1.12", "1.13", "1.14"]
        otp: ["23", "24"]
        exclude:
          - elixir: "1.12"
            otp: "24"
    continue-on-error: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: deps-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: _build/test/
          key: build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Install dependencies
        run: mix deps.get

      - name: Check format
        run: mix format --check-formatted

      - name: Analyse
        run: mix credo --strict

      - name: Run tests
        run: mix test

      - name: Restore PLT cache
        uses: actions/cache@v4
        id: plt_cache
        with:
          path: _build/test
          key: plts-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --no-check
